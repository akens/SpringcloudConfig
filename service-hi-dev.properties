foo=foo is version9

connection.url=jdbc:mysql://172.16.1.221:3306/edusohoread?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&autoReconnect=true&zeroDateTimeBehavior=convertToNull
connection.username=root
connection.password=123456

connection.writeurl=jdbc:mysql://172.16.1.221:3306/edusoho?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&autoReconnect=true&zeroDateTimeBehavior=convertToNull


# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
druid.initialSize=1
#    最小连接池数量
druid.minIdle=1
# 最大连接池数量
druid.maxActive=10
#    配置获取连接等待超时的时间
druid.maxWait=10000
#  配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.timeBetweenEvictionRunsMillis=60000
#  配置一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTimeMillis=300000
#  验证连接有效与否的SQL，不同的数据配置不同
druid.validationQuery=select 1
#  建议配置为true，不影响性能，并且保证安全性。
#  申请连接的时候检测，如果空闲时间大于
#  timeBetweenEvictionRunsMillis，
#  执行validationQuery检测连接是否有效。
druid.testWhileIdle=true
#  申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#  这里建议配置为TRUE，防止取到的连接不可用
druid.testOnBorrow=true
#  归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn=false
#  是否缓存preparedStatement，也就是PSCache。
#  PSCache对支持游标的数据库性能提升巨大，比如说oracle。
#  在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
#  作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，
#  该应该是支持PSCache。
#  打开PSCache，并且指定每个连接上PSCache的大小
druid.poolPreparedStatements=true
druid.maxPoolPreparedStatementPerConnectionSize=20
druid.filters=stat
druid.loginUsername=ason
druid.loginPassword=ason
mybatisPlus.globalConfig.idType=0
mybatisPlus.globalConfig.fieldStrategy=2
mybatisPlus.globalConfig.dbColumnUnderline=true
mybatisPlus.globalConfig.isRefresh=true
mybatisPlus.globalConfig.isCapitalMode=true
mybatisPlus.globalConfig.logicDeleteValue=0
mybatisPlus.globalConfig.logicNotDeleteValue=1
